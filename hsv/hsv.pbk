<languageVersion : 1.0;>

kernel HSVFilter
<   namespace : "com.om-labs.filters.hsv";
    vendor : "Om Labs";
    version : 1;
    description : "Controlling a Hue Saturation and Value of an Image";
>
{
    input image4 src;
    output pixel4 dst;
    
    parameter float hue<
        minValue: -180.0;
        maxValue: 180.0;
        defaultValue:0.0;
    >;
    
    parameter float saturation<
        minValue: -1.0;
        maxValue: 1.0;
        defaultValue: 0.0;
    >;
    
    parameter float brightness<
        minValue: -1.0;
        maxValue: 1.0;
        defaultValue: 0.0;
    >;
    

    void evaluatePixel(){
        pixel4 curColor = sampleNearest(src,outCoord());
        float minColor,maxColor,delta;
        float h,s,v;
        float r,g,b;
        float i,f,p,q,t;

        
        r = curColor.r; g = curColor.g; b = curColor.b;
        
        minColor = min(min(r,g),b);
        maxColor = max(max(r,g),b);
        delta = maxColor - minColor;
        
        v = maxColor;//v
        if (maxColor !=0.0 ) 
            s = delta/maxColor; //s
        
        if (maxColor == r) 
            h=(g-b)/delta;
        else if (maxColor == g) 
            h = 2.0 + (b-r)/delta;
        else
            h = 4.0 + (r-g)/delta;
            
        h *= 60.0;//h
        h += hue;//add to the values
        v += brightness;
        s += saturation;
        
        v = clamp(v,0.0,1.0);
        s = clamp(s,0.0,1.0);
        
        if(h<0.0)//mod h around
            h += 360.0;
        else if(h>=360.0)
            h -= 360.0;
            
        if(s==0.0)
            r = g = b = v;
        else{
            h /= 60.0;
            i = floor(h);
            f = h - i;
            p = v * ( 1.0 - s );
            q = v * ( 1.0 - s * f );
            t = v * ( 1.0 - s * ( 1.0 - f ) ); 
            
            if(i==0.0){
                r = v; g = t; b = p;
            }else if(i==1.0){
                r = q; g = v; b = p;
            }else if(i==2.0){
                r = p; g = v; b = t;
            }else if(i==3.0){
                r = p; g = q; b = v;
            }else if(i==4.0){
                r = t; g = p; b = v;
            }else if(i==5.0){
                r = v; g = p; b = t;
            }else{
                r = v; g = p; b = q;                
            }
        }
    
        dst = pixel4(r,g,b,curColor.a);
    }
}
